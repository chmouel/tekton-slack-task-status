apiVersion: tekton.dev/v1alpha1
kind: StepAction
metadata:
  name: cache-upload
  annotations:
    tekton.dev/pipelines.minVersion: "0.56.0"
    tekton.dev/tags: "cache"
spec:
  params:
    - name: pipelineRun
      type: string
      description: "The name of the PipelineRun, eg: $(context.pipelineRun.name)"
    - name: namespace
      type: string
      description: "The namespace of the PipelineRun, eg: $(context.pipelineRun.namespace)"
    - name: openshift_console_host
      type: string
      description: The URL of the cluster
    - name: image_url
      type: string
      description: The URL of the image for the Slack message
      default: https://github.com/tektoncd.png
    - name: show_haiku
      type: string
      description: Whether to show an haiku or not on failure
      default: "true"
  env:
    - name: SLACK_WEBHOOK_URL
      valueFrom:
        secretKeyRef:
          name: slack-webhook-url
          key: hook_url
    - name: PIPELINERUN
      value: "$(params.pipelineRun)"
    - name: NAMESPACE
      value: "$(params.namespace)"
    - name: OPENSHIFT_CONSOLE_HOST
      value: "$(params.openshift_console_host)"
    - name: IMAGE_URL
      value: "$(params.image_url)"
    - name: SHOW_HAIKU
      value: "$(params.show_haiku)"
  # I just need curl and bash really
  image: registry.access.redhat.com/ubi9/ubi-minimal
  script: |
    #!/usr/bin/env bash
    set -eux
    haikus=(
      "Broken dreams again
      Tripped on hope, stubbed toe on stars
      Coffee makes it right"

      "Glass shatters, hope trips
      Sun’s like, 'Not today, buddy!'
      Fail? Yeah, but we laugh"

      "Oops, I fell again
      But wait—new wisdom, right there
      Coffee’s my real friend"

      "Dreams crash, but who cares?
      Pick up pieces, find some snacks
      Hope runs on pizza"

      "Night hugs shattered dreams
      Dawn shows up late, no excuses
      We plant hope like weeds"

      "Shattered plans, no prob
      Let’s grab tacos, try again
      Stars can wait a bit"

      "Dreams slip, faceplants here
      But hope? Oh, it’s stubborn, see
      Nap, then try again"

      "Fail and fail again
      But shadows? We dance in them
      Laughter’s the secret"

      "Dark nights? What are those?
      We’ve got snacks and YouTube now
      Hope’s playlist is lit"

      "Oops, fell down again
      But wisdom’s waiting down there
      And maybe a donut"

      "Dreams just tripped and fell
      Like my Wi-Fi, they’ll come back
      With better signal"

      "Failure’s a free snack
      You taste, cringe, and then move on
      Hope is dessert, though"

      "Dropped my dreams, oh no!
      Five-second rule—hope’s still good
      Floor’s clean, don’t worry"

      "Dreams broke? Here’s duct tape
      We’ll fix them up after lunch
      Pizza fuels hope too"

      "Oops, hope took a fall
      But like my cat, it lands well
      Nine lives of dreaming"

      "Failed again, oh snap
      But memes exist, so we’re fine
      Hope vibes like TikTok"

      "Lost my dreams again
      Found them under my couch—whoops
      Covered in old chips"

      "Hope just spilled its drink
      But no big deal, we got this
      Mops and smiles ready"

      "Dawn’s late to the show
      But hope’s got popcorn for us
      Patience? Nah, snacks win"

      "Dreams are kinda like
      IKEA furniture: lost
      Screws but still standing"
    )
    haikus_len=${#haikus[@]}
    random_index=$((RANDOM % haikus_len))
    haiku=""
    if [[ "${SHOW_HAIKU,,}" == "true" || "${SHOW_HAIKU}" == "yes" ]]; then
      haiku="\n\n_${haikus[random_index]}_"
    fi
    json=$(cat <<EOF
    {
    "text": "PipelineRun *$PIPELINERUN* has failed",
    "attachments": [
      {
        "blocks": [
          {
            "type": "section",
            "text": {
              "type": "mrkdwn",
              "text": "See <https://${OPENSHIFT_CONSOLE_HOST}/k8s/ns/${NAMESPACE}/tekton.dev~v1~PipelineRun/${PIPELINERUN}|OpenShift Console> for more details${haiku}"
            },
            "accessory": {
              "type": "image",
              "image_url": "${IMAGE_URL}",
              "alt_text": "From tekton with love"
            }
          }
        ]
      }
    ]
    }
    EOF
    )
    curl -X POST -H 'Content-type: application/json' --data "${json}" $SLACK_WEBHOOK_URL
